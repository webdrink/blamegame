name: 🚀 Deploy Blame Game to GitHub Pages

on:
  push:
    branches:
      - main # Trigger deployment on push to the main branch

jobs:
  check-translations:
    name: 🌍 Check and Update Translations
    runs-on: ubuntu-latest
    outputs:
      translations-updated: ${{ steps.check-result.outputs.updated }}
      
    steps:
      - name: ⬇️ Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: ⚙️ Install Dependencies
        run: pnpm install --no-frozen-lockfile

      - name: 🔍 Check Translation Status
        id: translation-check
        run: |
          # Run translation check to see if translations are needed
          # Using --check-only flag to avoid actual translation API calls
          if pnpm run translate:check --check-only; then
            echo "needs-translation=false" >> $GITHUB_OUTPUT
            echo "✅ All translations are up to date"
          else
            echo "needs-translation=true" >> $GITHUB_OUTPUT
            echo "⚠️ Missing translations detected"
          fi
        continue-on-error: true

      - name: 🔤 Run Automatic Translation
        if: steps.translation-check.outputs.needs-translation == 'true'
        run: |
          echo "Missing translations detected, running automatic translation..."
          pnpm run translate --model gpt-4.1-nano
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        continue-on-error: false      
      - name: 🔍 Check for Translation Changes
        if: steps.translation-check.outputs.needs-translation == 'true'
        id: check-changes
        run: |
          if git diff --quiet public/questions/; then
            echo "changes=false" >> $GITHUB_OUTPUT
            echo "No translation changes detected"
          else
            echo "changes=true" >> $GITHUB_OUTPUT
            echo "Translation changes detected"
            git status --porcelain public/questions/
          fi      
      - name: 🆕 Commit and Push Translation Updates
        if: steps.translation-check.outputs.needs-translation == 'true' && steps.check-changes.outputs.changes == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add public/questions/
          git commit -m "🌍 Auto-translate: Update translations [skip ci]"
          git push

      - name: 📊 Check Final Result
        id: check-result
        run: |
          if [ "${{ steps.translation-check.outputs.needs-translation }}" = "true" ]; then
            echo "updated=true" >> $GITHUB_OUTPUT
            echo "🌍 Translations were updated"
          else
            echo "updated=false" >> $GITHUB_OUTPUT
            echo "✅ No translation updates needed"
          fi

  build-and-deploy:
    name: 🏗️ Build and Deploy
    runs-on: ubuntu-latest
    needs: check-translations
    permissions: # Necessary permissions for GitHub Pages deployment
      contents: read
      pages: write
      id-token: write
    environment: # Configure the deployment environment for GitHub Pages
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    env:
      VITE_BASE_PATH: / # Set base path to '/' for custom domain
    steps:
      - name: ⬇️ Checkout Repository (Latest with Translations)
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      - name: 🧹 Remove pnpm-workspace.yaml (if exists)
        run: rm -f pnpm-workspace.yaml
        shell: bash

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: ⚙️ Install Dependencies
        run: pnpm install --no-frozen-lockfile

      - name: 🎨 Lint Code
        run: pnpm run lint --max-warnings=9999

      - name: 🧐 Type-Check Code
        run: pnpm run typecheck

      - name: 🌍 Final Translation Validation
        run: pnpm run translate:validate

      - name: 🛠️ Build Project for Custom Domain
        run: pnpm run build:domain

      - name: 🔍 Verify Build
        run: pnpm run verify-build

      - name: 📝 Generate Build Report
        run: |
          echo "## Build Report" >> $GITHUB_STEP_SUMMARY
          echo "- **Base Path:** \`${VITE_BASE_PATH}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **CNAME:** blamegame.leagueoffun.de" >> $GITHUB_STEP_SUMMARY
          if [ "${{ needs.check-translations.outputs.translations-updated }}" = "true" ]; then
            echo "- **Translations:** ✅ Updated during deployment" >> $GITHUB_STEP_SUMMARY
          else
            echo "- **Translations:** ✅ Up to date" >> $GITHUB_STEP_SUMMARY
          fi
          echo "- **Build Directory Structure:**" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          ls -la dist >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          if [ -f dist/CNAME ]; then
            echo "✅ CNAME file found" >> $GITHUB_STEP_SUMMARY
          else
            echo "⚠️ CNAME file not found" >> $GITHUB_STEP_SUMMARY
          fi

      - name: ⚙️ Configure GitHub Pages
        uses: actions/configure-pages@v5

      - name: ⬆️ Upload Build Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist' # Path to the directory to upload

      - name: 🚀 Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
