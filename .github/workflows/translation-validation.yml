name: 🌍 Translation Validation and Update

on:
  # Only run on direct changes to translation-related files
  push:
    branches: [ main, develop ]
    paths:
      - 'public/questions/**'
      - 'scripts/auto-translate.js'
      - 'scripts/validate-translations.js'
      - '**.tsx'
      - '**.ts'
      - '**.json'
  pull_request:
    branches: [ main ]
    paths:
      - 'public/questions/**'
      - 'scripts/auto-translate.js'
      - 'scripts/validate-translations.js'
  # Allow manual triggers
  workflow_dispatch:
    inputs:
      triggered-by:
        description: 'Workflow that triggered this run'
        required: false
        default: 'manual'

jobs:
  validate-translations:
    runs-on: ubuntu-latest
    outputs:
      needs-translation: ${{ steps.translation-check.outputs.needs-translation }}
    
    steps:
    - name: ⬇️ Checkout code
      uses: actions/checkout@v4

    - name: 📦 Setup pnpm
      uses: pnpm/action-setup@v3
      with:
        version: 9
      
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: ⚙️ Install dependencies
      run: pnpm install --no-frozen-lockfile
      
    - name: 🔍 Validate translation completeness
      run: pnpm run translate:validate
      
    - name: ✅ Verify all assets
      run: pnpm run verify-assets
      
    - name: 🔎 Check missing translations
      id: translation-check
      run: |
        # Run translation check with --check-only to avoid API calls
        if pnpm run translate:check --check-only; then
          echo "needs-translation=false" >> $GITHUB_OUTPUT
          echo "✅ All translations are up to date"
        else
          echo "needs-translation=true" >> $GITHUB_OUTPUT
          echo "⚠️ Missing translations detected"
        fi
      continue-on-error: true

  auto-translate-and-commit:
    runs-on: ubuntu-latest
    needs: validate-translations
    if: |
      needs.validate-translations.outputs.needs-translation == 'true' && 
      ((github.ref == 'refs/heads/main' && github.event_name == 'push' && !contains(github.event.head_commit.message, '[skip translate]')) ||
      (github.event_name == 'workflow_dispatch'))
    
    steps:
    - name: ⬇️ Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: 📦 Setup pnpm
      uses: pnpm/action-setup@v3
      with:
        version: 9
        
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: ⚙️ Install dependencies
      run: pnpm install --no-frozen-lockfile
      
    - name: 🔤 Run automatic translation
      run: pnpm run translate --model gpt-4.1-nano
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      continue-on-error: false
      
    - name: 🔍 Check for translation changes
      id: check-changes
      run: |
        if git diff --quiet public/questions/; then
          echo "changes=false" >> $GITHUB_OUTPUT
          echo "No translation changes detected"
        else
          echo "changes=true" >> $GITHUB_OUTPUT
          echo "Translation changes detected"
          git status --porcelain public/questions/
        fi
        
    - name: 📤 Commit and push translation updates
      if: steps.check-changes.outputs.changes == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add public/questions/
        git commit -m "🌍 Auto-translate: Update translations [skip ci]"
        git push
        
    - name: ✅ Validate translations after update
      run: pnpm run translate:validate
      
    - name: 🔍 Verify all assets after translation
      run: pnpm run verify-assets

  build-test-pr:
    runs-on: ubuntu-latest
    needs: validate-translations
    if: github.event_name == 'pull_request'
    
    steps:
    - name: ⬇️ Checkout code
      uses: actions/checkout@v4

    - name: 📦 Setup pnpm
      uses: pnpm/action-setup@v3
      with:
        version: 9
      
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: ⚙️ Install dependencies
      run: pnpm install --no-frozen-lockfile
      
    - name: 🛠️ Build application
      run: pnpm run build
      
    - name: 🔍 Verify build
      run: pnpm run verify-build
